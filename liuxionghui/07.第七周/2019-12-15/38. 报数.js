// 报数序列是一个整数序列，按照其中的整数的顺序进行报数，得到下一个数。其前五项如下：

// 1.     1
// 2.     11
// 3.     21
// 4.     1211
// 5.     111221
// 1 被读作  "one 1"  ("一个一") , 即 11。
// 11 被读作 "two 1s" ("两个一"）, 即 21。
// 21 被读作 "one 2",  "one 1" （"一个二" ,  "一个一") , 即 1211。

// 给定一个正整数 n（1 ≤ n ≤ 30），输出报数序列的第 n 项。

// 注意：整数顺序将表示为一个字符串。

//  

// 示例 1:

// 输入: 1
// 输出: "1"
// 示例 2:

// 输入: 4
// 输出: "1211"

function countAndSay(n) {
    var str = '1';
    var count = 0;
    var j = 0;
    var z = 0;
    // 遍历n-1次，因为第一位不用算为'1'
    for (var i = 0; i < n - 1; i++) {
        var aux = [];
        j = 0;
        while (j < str.length) {
            count = 1;
            // 找有多少个和str[j]一样的
            z = j + 1;
            while (str[z] === str[j] && z < str.length) {
                // 索引移动
                z++;
                // 计数增加
                count++;
            }
            // 把字符个数推进去
            aux.push(count + '');
            // 把字符推进去
            aux.push(str[j]);
            // 更新索引
            j = z - 1;
            // 移动索引
            j++;
        }
        // 全部处理完，join一下就是下一个数字
        str = aux.join('');
    }
    return str;
}
// 思路：找到相同的数字，数的个数加这个数的字符串作为下一个数